{"version":3,"sources":["assets/parallaxForest/01_Mist.png","assets/parallaxForest/02_Bushes.png","assets/parallaxForest/04_Forest.png","assets/parallaxForest/06_Forest.png","assets/parallaxForest/07_Forest.png","assets/parallaxForest/08_Forest.png","assets/parallaxForest/09_Forest.png","App/Components/ContentWithParallax.tsx","App/Components/SceneComponent.tsx","App/App.tsx","App/Hooks/UseDevcieOrientation.tsx","index.tsx"],"names":["ContentWrapper","styled","div","pLayer","animated","Layer1","f9","Layer2","f8","Layer3","f7","Layer4","f6","Layer5","f4","Layer6","f2","Layer7","f1","ContentLayer","trans1","x","y","trans2","trans3","trans4","trans5","trans6","trans7","ContentWithParallax","cProps","useSpring","config","mass","tension","friction","props","set","parallaxValue","getValue","style","backgroundPosition","interpolate","children","Canvas","canvas","SceneComponent","reactCanvas","useRef","useEffect","current","sceneToRender","createScene","a","scene","Scene","engine","camera","FreeCamera","Vector3","setTarget","Zero","attachControl","HemisphericLight","intensity","anchor","TransformNode","manager","GUI3DManager","panel","SpherePanel","margin","addControl","linkToTransformNode","position","z","addButton","i","button","Button3D","text1","TextBlock","text","color","fontSize","content","blockLayout","index","createDefaultEnvironment","createDefaultXRExperienceAsync","baseExperience","console","log","Engine","preserveDrawingBuffer","stencil","then","returnedScene","runRenderLoop","render","resize","window","addEventListener","dispose","removeEventListener","ref","pHeader","pLayout","Header","pFooter","Footer","pContent","Content","boxShadow","AppContainer","Layout","Card","pCard","App","useState","gyroEnabled","setGyroEnabled","setParallaxValue","modalEnabled","setModalEnabled","error","setError","orientation","setOrientation","onDeviceOrientation","event","alpha","beta","gamma","revokeAccessAsync","requestAccessAsync","DeviceOrientationEvent","Error","requestPermission","DeviceMotionEvent","permission","requestAccess","useCallback","revokeAccess","useDeviceOrientation","newValue","matchMedia","matches","onMouseMove","clientX","clientY","type","onClick","onChange","toggleState","visible","title","centered","onCancel","footer","ReactDOM","StrictMode","document","body"],"mappings":"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","file":"static/js/main.14ff84e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/01_Mist.f79e46a8.png\";","export default __webpack_public_path__ + \"static/media/02_Bushes.db4aa977.png\";","export default __webpack_public_path__ + \"static/media/04_Forest.ce3c2506.png\";","export default __webpack_public_path__ + \"static/media/06_Forest.2ecdfc49.png\";","export default __webpack_public_path__ + \"static/media/07_Forest.6a7a2c18.png\";","export default __webpack_public_path__ + \"static/media/08_Forest.19519dec.png\";","export default __webpack_public_path__ + \"static/media/09_Forest.1822e0eb.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated } from 'react-spring';\n\nimport f1 from '../../assets/parallaxForest/01_Mist.png';\nimport f2 from '../../assets/parallaxForest/02_Bushes.png';\nimport f4 from '../../assets/parallaxForest/04_Forest.png';\nimport f6 from '../../assets/parallaxForest/06_Forest.png';\nimport f7 from '../../assets/parallaxForest/07_Forest.png';\nimport f8 from '../../assets/parallaxForest/08_Forest.png';\nimport f9 from '../../assets/parallaxForest/09_Forest.png';\n\nconst ContentWrapper = styled.div`\n    position: relative;\n    height: 100%;\n    background-color: #defdfd;\n`;\n\nconst pLayer = styled(animated.div)`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    background-size: cover;\n    background-repeat: repeat-x;\n    background-position-y: bottom;\n`;\n\nconst Layer1 = styled(pLayer)`\n    z-index: 1;\n    background-image: url(${f9});\n`;\n\nconst Layer2 = styled(pLayer)`\n    z-index: 2;\n    background-image: url(${f8});\n`;\n\nconst Layer3 = styled(pLayer)`\n    z-index: 3;\n    background-image: url(${f7});\n`;\n\nconst Layer4 = styled(pLayer)`\n    z-index: 4;\n    background-image: url(${f6});\n`;\n\nconst Layer5 = styled(pLayer)`\n    z-index: 5;\n    background-image: url(${f4});\n`;\n\nconst Layer6 = styled(pLayer)`\n    z-index: 6;\n    background-image: url(${f2});\n`;\n\nconst Layer7 = styled(pLayer)`\n    z-index: 7;\n    background-image: url(${f1});\n`;\n\nconst ContentLayer = styled.div`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 8;\n    overflow-x: hidden;\n    overflow-y: auto;\n`;\n\nconst trans1 = (x: number, y: number): string => `${-x / 24}px, 100%`;\nconst trans2 = (x: number, y: number): string => `${-x / 20}px, 100%`;\nconst trans3 = (x: number, y: number): string => `${-x / 16}px, 100%`;\nconst trans4 = (x: number, y: number): string => `${-x / 12}px, 100%`;\nconst trans5 = (x: number, y: number): string => `${-x / 8}px, 100%`;\nconst trans6 = (x: number, y: number): string => `${-x / 4}px, 100%`;\nconst trans7 = (x: number, y: number): string => `${-x / 2}px, 100%`;\n\ninterface MyProps {\n    children?: React.ReactNode;\n    parallaxValue: number;\n}\n\nconst ContentWithParallax: React.FunctionComponent<MyProps> = cProps => {\n    const [props, set] = useSpring(() => ({ x: 0, config: { mass: 10, tension: 550, friction: 140 } }));\n\n    if (cProps.parallaxValue !== props.x.getValue()) {\n        set({ x: cProps.parallaxValue });\n    }\n\n    return (\n        <ContentWrapper>\n            <Layer1 style={{ backgroundPosition: props.x.interpolate(trans1 as any) }} />\n            <Layer2 style={{ backgroundPosition: props.x.interpolate(trans2 as any) }} />\n            <Layer3 style={{ backgroundPosition: props.x.interpolate(trans3 as any) }} />\n            <Layer4 style={{ backgroundPosition: props.x.interpolate(trans4 as any) }} />\n            <Layer5 style={{ backgroundPosition: props.x.interpolate(trans5 as any) }} />\n            <Layer6 style={{ backgroundPosition: props.x.interpolate(trans6 as any) }} />\n            <Layer7 style={{ backgroundPosition: props.x.interpolate(trans7 as any) }} />\n\n            <ContentLayer>\n                {cProps.children}\n            </ContentLayer>\n        </ContentWrapper>\n    );\n}\n\nexport default ContentWithParallax;","import { Engine, Scene, FreeCamera, TransformNode, Vector3, HemisphericLight } from \"@babylonjs/core\";\nimport { GUI3DManager, SpherePanel, Button3D, TextBlock } from \"babylonjs-gui\";\n\nimport React, { useEffect, useRef } from \"react\";\n\nimport styled from 'styled-components';\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n  touch-action: none;\n`;\n\ninterface MyProps {\n\n}\n\nconst SceneComponent: React.FunctionComponent<MyProps> = props => {\n  const reactCanvas = useRef(null);\n  useEffect(() => {\n    if (reactCanvas.current) {\n      // Initialize Babylon.js variables.\n      let sceneToRender: Scene | undefined;\n      const createDefaultEngine = function () {\n        return new Engine(reactCanvas.current, true, {\n          preserveDrawingBuffer: true,\n          stencil: true\n        });\n      };\n\n      // Create scene and create XR experience.\n      const createScene = async function () {\n        // Create a basic Babylon Scene object.\n        let scene = new Scene(engine);\n\n        // Create and position a free camera.\n        let camera = new FreeCamera('camera-1', new Vector3(0, 5, -10), scene);\n        // Point the camera at scene origin.\n        camera.setTarget(Vector3.Zero());\n\n        // Attach camera to canvas.\n        camera.attachControl(reactCanvas.current, true);\n\n        // Create a light and aim it vertically to the sky (0, 1, 0).\n        let light = new HemisphericLight('light-1', new Vector3(0, 1, 0), scene);\n\n        // Set light intensity to a lower value (default is 1).\n        light.intensity = 0.5;\n\n        let anchor = new TransformNode(\"\");\n\n        // Create the 3D UI manager\n        let manager = new GUI3DManager(scene);\n\n        let panel = new SpherePanel();\n        panel.margin = 0.2;\n\n        manager.addControl(panel);\n        panel.linkToTransformNode(anchor);\n        panel.position.z = 1;\n        panel.position.y = 4;\n\n        // Let's add some buttons!\n        let addButton = function (i: number) {\n          let button = new Button3D(\"reset\")\n          panel.addControl(button);\n\n          let text1 = new TextBlock();\n          text1.text = \"test\" + i;\n          text1.color = \"white\";\n          text1.fontSize = 24;\n          button.content = text1;\n        }\n\n        panel.blockLayout = true;\n        for (let index = 0; index < 60; index++) {\n          addButton(index);\n        }\n        panel.blockLayout = false;\n\n\n        // Create a default environment for the scene.\n        scene.createDefaultEnvironment();\n\n        // Initialize XR experience with default experience helper.\n        const xrHelper = await scene.createDefaultXRExperienceAsync({});\n        if (!xrHelper.baseExperience) {\n          // XR support is unavailable.\n          console.log('WebXR support is unavailable');\n        } else {\n          // XR support is available; proceed.\n          return scene;\n        }\n      };\n\n      // Create engine.\n      const engine = createDefaultEngine();\n      if (!engine) {\n        throw 'Engine should not be null';\n      }\n\n      // Create scene.\n      const scene = createScene();\n      scene.then(function (returnedScene: Scene | undefined) {\n        sceneToRender = returnedScene;\n      });\n\n      // Run render loop to render future frames.\n      engine.runRenderLoop(function () {\n        if (sceneToRender) {\n          sceneToRender.render();\n        }\n      });\n\n      const resize = () => {\n        engine.resize();\n      };\n\n      if (window) {\n        window.addEventListener(\"resize\", resize);\n      }\n      return () => {\n        engine.dispose();\n        if (window) {\n          window.removeEventListener(\"resize\", resize);\n        }\n      };\n    }\n  }, [reactCanvas]);\n  return <Canvas ref={reactCanvas} />;\n}\n\nexport default SceneComponent;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\nimport { Layout as pLayout, Modal, Button, Card as pCard, Switch } from 'antd';\n\n\nimport ContentWithParallax from './Components/ContentWithParallax';\nimport SceneComponent from './Components/SceneComponent';\n\nimport { useDeviceOrientation } from './Hooks/UseDevcieOrientation';\n\nconst pHeader = pLayout.Header;\nconst pFooter = pLayout.Footer;\nconst pContent = pLayout.Content;\n\nconst boxShadow = '7px 7px 0px 0px rgba(0, 0, 0, .25)';\n\nconst AppContainer = styled.div`\n  height: 100%;\n  display: block;\n  text-align: center;\n`;\n\nconst Header = styled(pHeader)`\n  background: #7dbcea;\n  box-shadow: ${boxShadow};\n`;\n\nconst Layout = styled(pLayout)`\n  height: 100%;\n`;\n\nconst Footer = styled(pFooter)`\n  background: #7dbcea;\n`;\n\nconst Content = styled(pContent)`\n  flex: 1;\n`;\n\nconst Card = styled(pCard)`\n  display: inline-block;\n  width: 100%;\n  max-width: 350px;\n  box-shadow: ${boxShadow};\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nfunction App() {\n  const [gyroEnabled, setGyroEnabled] = useState(false);\n  const [parallaxValue, setParallaxValue] = useState(0);\n\n  const [modalEnabled, setModalEnabled] = useState(false);\n\n  const { orientation, requestAccess, revokeAccess } = useDeviceOrientation();\n\n  const onToggle = (toggleState: boolean): void => {\n    setGyroEnabled(toggleState);\n    if (toggleState) {\n      requestAccess();\n    }\n    else {\n      revokeAccess();\n    }\n  };\n\n  if (gyroEnabled && !modalEnabled && orientation !== null && orientation.gamma !== null && orientation.alpha !== null) {\n    let newValue = orientation.alpha * 50;\n    const mql = window.matchMedia(\"(orientation: portrait)\");\n\n    if (mql.matches) {\n      newValue = orientation.gamma * 50;\n    }\n\n    if (parallaxValue !== newValue) {\n      setParallaxValue(newValue);\n    }\n    console.log(orientation);\n  }\n\n  return (\n    <AppContainer onMouseMove={({ clientX: x, clientY: y }) => { if (!modalEnabled && !gyroEnabled) { setParallaxValue(x); } }}>\n      <Layout>\n        <Header>\n          <h1>\n            Payks VR Demos: Overview\n            </h1>\n        </Header>\n\n        <Content>\n          <ContentWithParallax parallaxValue={parallaxValue}>\n            <Card>\n              <h3>\n                VR Demos designed for Oculus Quest 2\n              </h3>\n              <p>\n                (but they should work on desktop/mobile etc)\n              </p>\n\n              <Button type=\"primary\" onClick={() => setModalEnabled(true)}>Start VR</Button>\n            </Card>\n          </ContentWithParallax>\n        </Content>\n\n        <Footer>\n          Use Gyroscope <Switch onChange={onToggle} />\n        </Footer>\n      </Layout>\n\n      <Modal\n        visible={modalEnabled}\n        title=\"VR\"\n        centered\n        onCancel={() => setModalEnabled(false)}\n        footer={null}\n      >\n        {modalEnabled && <SceneComponent />}\n      </Modal>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import { useCallback, useEffect, useState } from 'react';\n\ntype DeviceOrientation = {\n  alpha: number | null,\n  beta: number | null,\n  gamma: number | null,\n}\n\ntype UseDeviceOrientationData = {\n  orientation: DeviceOrientation | null,\n  error: Error | null,\n  requestAccess: () => Promise<boolean>,\n  revokeAccess: () => Promise<void>,\n};\n\nexport const useDeviceOrientation = (): UseDeviceOrientationData => {\n  const [error, setError] = useState<Error | null>(null);\n  const [orientation, setOrientation] = useState<DeviceOrientation | null>(null);\n\n  const onDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    setOrientation({\n      alpha: event.alpha,\n      beta: event.beta,\n      gamma: event.gamma,\n    });\n  };\n\n  const revokeAccessAsync = async (): Promise<void> => {\n    window.removeEventListener('deviceorientation', onDeviceOrientation);\n    setOrientation(null);\n  };\n\n  const requestAccessAsync = async (): Promise<boolean> => {\n    if (!window.DeviceOrientationEvent) {\n      setError(new Error('Device orientation event is not supported by your browser'));\n      return false;\n    }\n\n    if (\n      DeviceOrientationEvent.requestPermission\n      && typeof DeviceMotionEvent.requestPermission === 'function'\n    ) {\n      let permission: PermissionState;\n      try {\n        permission = await DeviceOrientationEvent.requestPermission();\n      } catch (err) {\n        setError(err);\n        return false;\n      }\n      if (permission !== 'granted') {\n        setError(new Error('Request to access the device orientation was rejected'));\n        return false;\n      }\n    }\n\n    window.addEventListener('deviceorientation', onDeviceOrientation);\n\n    return true;\n  };\n\n  const requestAccess = useCallback(requestAccessAsync, []);\n  const revokeAccess = useCallback(revokeAccessAsync, []);\n\n  useEffect(() => {\n    return (): void => {\n      revokeAccess();\n    };\n  }, [revokeAccess]);\n\n  return {\n    orientation,\n    error,\n    requestAccess,\n    revokeAccess,\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nimport App from './App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n\n"],"sourceRoot":""}